1.  추상클래스가 추상클래스를 상속하는 경우
    자식 추상클래스는 부모의 추상메서드를 반드시 구현하지 않아도 된다.
    구현하지 않았다면 어떻게 추상메서드를 구현할 수 있는지 설명하세요.
    ★답 :
        자식 추상클래스에서 public override를 사용하여
        부모의 추상메서드를 새로 구현할 수 있습니다.

2.  클래스에 포함되는 메서드 필드, 프로퍼티 간의 차이를 설명하세요.
    ★답 : 
        메서드 필드는 클래스의 변수로, 일반적으로 private로 선언한 후
            Get, Set 메서드를 따로 만들어 이 메서드로 값을 얻거나 설정하게 한다.
        프로퍼티는 실제로 property accessors(속성 접근자)라고 불리는 메서드이다.
            프로퍼티는 객체의 내부 정보를 외부에 노출하기 위해 다른 클래스에게
            제공되는 메서드 멤버이다.
        
3.  C++이나 Java에서는 클래스가 인스턴스화 될 때, 생성자를 이용해서 초기화 한다.
    C#에서는 프로퍼티를 이용하여 객체를 초기화 한다.
    위의 예제를 작성하세요.
    ★답 :

    public class Property
    {
        private int age;
        private string name;
        public int Age {get; set;}
        public string? Name {get; set;}
    }

    internal class Test
    {
        static void Main()
        {
            Property obj = new Property() {Age = 25, Name = "박성순"};
            Console.WriteLine($"Age : {obj.Age}");
            Console.WriteLine($"Name : {obj.Name}");
        }
    }

4.  프로퍼티를 쓰는 이유나 역할에 대하여 설명하세요.
    ★답 : 
        보통 객체의 은닉성을 표현해야할 때 데이터가 의도치 않게
        오염되는 것을 막기 위해 프로퍼티를 사용하면 매우 간편하게 사용할 수 있다.

5.  OOP의 3대 특성을 적고 설명하세요.
    ★답 : 은닉성(캡슐화), 상속, 다형성
        은닉성은 정보 은닉을 목적으로 하여 접근 지정자를 통하여 접근할 수 있게 함
        상속은 코드의 재활용과 확장성을 위해 사용함
        다형성은 하나의 객체가 여러 형태를 가질수 있음을 뜻함
            메서드 오버로딩과 같이 동일한 메서드 이름으로 여러가지 기능 구현을
            가능하게 함.
