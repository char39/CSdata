1. 아래의 코드를 보고, 일반화 프로그래밍을 이용하여 코드 줄을 줄여보세요.
    문제 :
    internal class Program
    {
        static void Main()
        {
            int[] intValues = { 1, 2, 3 };
            double[] doubleValues = { 1.1, 2.2, 3.3 };
            PrintValue(intValues);
            PrintValue(doubleValues);
        }
        static void PrintValue(int[] values)
        {
            foreach (int i in values)
                Console.WriteLine(i);
        }
        static void PrintValue(double[] values)
        {
            foreach (double i in values)
                Console.WriteLine(i);
        }
    }

    답 :
    internal class Program
    {
        static void Main()
        {
            int[] intValues = { 1, 2, 3 };
            double[] doubleValues = { 1.1, 2.2, 3.3 };
            PrintValue(intValues);
            PrintValue(doubleValues);
        }
        static void PrintValue<T>(T[] values)
        {
            foreach (T value in values)
                Console.WriteLine(value);
        }
    }

2. 다음 코드의 출력 결과값은 얼마인가요?
    문제 :
    static void Main()
    {
        Func<int> func_1 = () => 10;
        Func<int, int> func_2 = (a) => a * 2;
        Console.WriteLine(func_1() + func_2(30));
    }

    답 :
        70

3. 다음 코드에서 익명 메서드를 람다식으로 수정하세요.
    문제 :
    using System;
    namespace App1
    {
        internal class MainApp
        {
            static void Main()
            {
                int[] array = {11,22,33,44,55};
                foreach(int a in array)
                {
                    Action action = new Action
                    (
                        delegate()
                        {
                            Console.WriteLine(a * a);
                        }
                    );
                    action.Invoke();
                }
            }
        }
    }

    답 :
    using System;
    namespace App1
    {
        delegate void Calc(int[] x);
        internal class MainApp
        {
            static void Main()
            {
                int[] array = { 11, 22, 33, 44, 55 };
                Calc calc = (arrays) =>
                {
                    foreach (int i in arrays)
                    Console.WriteLine(i * i);
                };
                calc(array);
            }
        }
    }

4. 다음 코드를 람다식으로 수정하세요.
    문제 :
    public delegate float CustomDelegate(int a, int b);
    public class MyClass
    {
        public static float Divide(int a, int b)
        {
            return (float)a / b;
        }
    }

    internal class Program
    {
        static void Main()
        {
            CustomDelegate del = MyClass.Divide;
            float result = del(10, 5);
            Console.WriteLine("Result : " + result);
        }
    }

    답 :
    public delegate float CustomDelegate(int a, int b);

    internal class Program
    {
        static void Main()
        {
            CustomDelegate del = (x, y) => x / y;
            Console.WriteLine("Result : " + del(10, 5));
        }
    }

4.1 위 코드를 Func를 사용하여 작성하세요.
    답 :
    internal class Program
    {
        static void Main()
        {
            Func<float, float, float> func_Divide = (x, y) => x / y;
            Console.WriteLine($"func_Divide : {func_Divide(25, 5)}");
        }
    }