유니티
    고전 방식을 이용하여 데이터를 물리적으로 저장 하였다.
    
    유니티에서 지원하는 클래스 중, 데이터를 저장하기 위한 별도의 클래스를 제공하는데,
    ScriptableObject 클래스를 이용하여 대량의 공유 데이터를 저장할 수 있다. 확장자는 .asset이다.
    ScriptableObject 클래스는 다음과 같은 특징이 있는데,
        컴포넌트가 아니므로, 게임 오브젝트나 Prefab에 붙일 수 없다.
        대부분의 이벤트 함수를 사용할 수 없다.
        인스펙터에 노출되지 않는다.
        인스펙터에 노출되지 않기 때문에, SerializeField 키워드를 사용할 수 없다.
    ScriptableObject 클래스를 생성하는 방법
        메모리에 생성하는 방법 : ScriptableObject.CreateInstance<T>();
        프로젝트에 저장하는 방법 : AssetDatabase.CreateAsset();
        Atturibute를 이용한 방법 : [CreateAssetMenuAttribute(fileName = "파일이름", menuName = "메뉴이름", order = 1)]


    장애물 검출에 Raycast 응용
    Barrel이나 Box와 같은 장애물을 검출하여 총알 발사를 막는다.

    Enemy 머리 위에 HP바를 표시, hptxt를 이용하여 HP를 표시한다.
    장애물에 카메라가 가려지면 카메라가 이동한다.

C#
    람다식 (Lambda Expression) :
        람다식의 기원은 1936년도 수학자 알론조 처치가 제안한 람다 대수에서 유래한다.
        람다식은 익명 메서드를 만들기 위한 식으로, 람다식은 메서드를 간결하게 표현할 수 있어서 코드를 간결하게 만들어 준다.
        Func, Action 델리게이트를 이용하여 람다식을 사용할 수 있다.
        Func은 반환값이 있는 메서드를 참조할 때 사용하고,
        Action은 반환값이 없는 메서드를 참조할 때 사용한다.
    
    일반화 프로그래밍, 익명의 메서드 :
    

    LinQ :
        LinQ는 Language Integrated Query의 약자로, C# 3.0부터 지원하는 기능이다.
        