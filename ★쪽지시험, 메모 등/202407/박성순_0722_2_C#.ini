자료구조 알고리즘

1. 가변길이 배열
    ArrayList (비제네릭) :
        컬렉션 이란, 같은 성격을 가진 데이터의 모음을 담는 자료구조. 배열이라 한다.
        ArrayList, Queue, Stack, HashTable 등이 있다.
        배열과 달리 컬렉션을 생성할 때, 크기를 지정할 필요가 없다. 자동으로 크기가 조절된다. (가변길이)
        유니티에서는 사용하지 않는다. (속도가 느리다)
            ArrayList는 object 타입을 사용한다.
            object 타입을 사용하기 때문에, 모든 자식 오브젝트를 담을 수 있다. (다형성)
            형변환을 위한 박싱, 언박싱이 발생하기 때문에 속도가 느리다.

    Queue (비제네릭) :
        큐는 선입선출(FIFO) 구조를 가진다.
        Enqueue() : 큐에 데이터를 추가한다.
        Dequeue() : 큐에서 데이터를 꺼낸다.
        Peek() : 큐에서 데이터를 확인한다.

    Stack (비제네릭) :
        스택은 후입선출(LIFO) 구조를 가진다.
        Push() : 스택에 데이터를 추가한다.
        Pop() : 스택에서 데이터를 꺼낸다.
        Peek() : 스택에서 데이터를 확인한다.

    HashTable (비제네릭) :
        해시테이블은 키와 값으로 이루어진 데이터를 저장한다.
        키를 통해 값을 찾는다.
        키는 중복될 수 없다.
        키와 값은 object 타입을 사용한다.
    
    Indexer (인덱서) :
        인덱서는 클래스의 인스턴스를 배열처럼 사용할 수 있게 해준다.
        인덱서는 this 키워드를 사용한다.
        인덱서는 클래스 내부에 배열을 선언하고, 인덱스를 사용하여 배열에 접근할 수 있게 해준다.

    List (제네릭)

    Delegate (대리자) :

