클래스
  멤버 필드에 변수들 선언(멤버변수)
  생성자
    각종 관련된 메서드들 Info메서드 멤버필드에 선언된 변수 데이터
    저장 및 수정
  소멸자


클래스 상속으로 코드 재활용
상속의 진정한 의미는 코드의 재활용도 있지만
프로젝트가 늘어나거나 확장되는 경우에 상속을 활용해서 코드를 최적화하는 것.
코드의 재활용과 더불어 확장성이 있어야 함. 불필요한 코드를 쓰지 않게.
자식이 달라고 하면 부모는 무조건 물려주어야 되지만,
상속이 안되도록 막아야되는 경우에는 class 앞에 sealed로 봉인해주면 됨


클래스 상속으로 인해 코드의 재사용성이 높아지고, 유지보수가 용이해진다.
프로젝트가 커질수록 클래스 상속을 통해 코드를 최적화 할 수 있다.
자식클래스가 상속을 요구하면 부모클래스는 반드시 초기화 되어야 하지만,
상속이 안되도록 하려면 클래스 앞에 sealed 키워드를 사용하면 된다.



클래스와 구조체의 차이 :

키워드			class				struct
형식			참조(heap)			값(stack)
복사			얕은 복사				깊은 복사
인스턴스 생성		new 연산자와 생성자 필요		선언만으로 생성
생성자			매개변수 없는 생성자 선언가능	매개변수 없는 생성자 선언불가
상속			가능				값 형식이라 상속 불가
목적			실제 세계의 객체를 추상화		데이터를 담기 위한 목적의
			하려는데 존재의 이유		자료 구조로 쓰이기 위해