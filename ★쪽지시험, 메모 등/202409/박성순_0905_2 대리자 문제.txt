문제 1.
    아래의 코드를 람다식으로 바꾸어 보세요. 홀수 출력 짝수 출력 되는 부분은 Predicate 대리자를 이용 하세요
    
    코드 :
    class Program
    {
        static void Main(string[] args)
        {
            int[] arr = new int[10];

            Console.WriteLine("총 10개의 숫자 입력");
            for (int i = 0; i < 10; i++)
            {
                Console.Write("입력: ");
                arr[i] = int.Parse(Console.ReadLine());
            }

            Console.Write("홀수 출력 : ");
            ShowOdd(arr);

            Console.Write("짝수 출력 : ");
            ShowEven(arr);
        }

        static void ShowOdd(int[] arr) // 홀수 출력
        {
            foreach (int num in arr)
            {
                if (num % 2 == 1)
                    Console.Write($"{num}, ");
            }
            Console.WriteLine();
        }

        static void ShowEven(int[] arr) // 짝수 출력
        {
            foreach (int num in arr)
            {
                if (num % 2 == 0)
                    Console.Write($"{num}, ");
            }
            Console.WriteLine();
        }
    }
    
    답 :
    internal class Program
    {
        static void Main()
        {
            int[] arr = new int[10];

            Console.WriteLine("총 10개의 숫자 입력");
            for (int i = 0; i < 10; i++)
            {
                Console.Write("입력: ");
                arr[i] = int.Parse(Console.ReadLine());
            }

            Console.Write("홀수 출력 : ");
            ShowNumbs(arr, num => num % 2 == 1);

            Console.Write("짝수 출력 : ");
            ShowNumbs(arr, num => num % 2 == 0);
        }

        static void ShowNumbs(int[] arr, Predicate<int> condition)
        {
            foreach (int num in arr)
            {
                if (condition(num))
                    Console.Write($"{num}, ");
            }
            Console.WriteLine();
        }
    }

문제 2.
    아래 내용을 람다식 으로 익명이나 무명 형식으로 바꾸어서 출력 되게 하세요.

    코드 :
    delegate int MyDelegate( int a, int b);

    class Calculator
    {
        public int Plus(int a, int b)
        {
            return a + b;
        }

        public static int Minus(int a, int b)
        {
            return a - b;
        }
    }

    class MainApp
    {
        static void Main(string[] args)
        {
            Calculator Calc = new Calculator();
            MyDelegate Callback;

            Callback = new MyDelegate( Calc.Plus );
            Console.WriteLine(Callback(3, 4));

            Callback = new MyDelegate(Calculator.Minus);
            Console.WriteLine(Callback(7, 5));
        }
    }

    답 :
    internal class Program
    {
        static void Main(string[] args)
        {
            Func<int, int, int> plus = delegate (int x, int y) { return x + y; };
            Func<int, int, int> minus = delegate (int x, int y) { return x - y; };

            Console.WriteLine(plus(3, 4));
            Console.WriteLine(minus(7, 5));
        }
    }



문제 3.
    아래의 코드에서 delegate 대신에 Func를 사용 해서 메서드에 전달하는 방식으로 바꾸세요.
    
    코드 :
    delegate int Compare(int a, int b);

    class MainApp
    {
        static int AscendCompare(int a, int b)
        {
            if (a > b)
                return 1;
            else if( a == b )
                return 0;
            else
                return -1 ; 
        }

        static int DescendCompare(int a, int b)
        {
            if (a < b)
                return 1;
            else if (a == b)
                return 0;
            else
                return -1;
        }

        static void BubbleSort(int[] DataSet, Compare Comparer) 
        { 
            int i = 0; 
            int j = 0; 
            int temp = 0; 
 
            for ( i=0; i<DataSet.Length-1; i++ ) 
            {
                for (j = 0; j < DataSet.Length - (i + 1); j++)  
                { 
                    if ( Comparer( DataSet[j] , DataSet[j+1] ) > 0 ) 
                    { 
                        temp = DataSet[j+1]; 
                        DataSet[j+1] = DataSet[j]; 
                        DataSet[j] = temp; 
                    }
                }
            }
        }

        static void Main(string[] args)
        {
            int[] array = { 3, 7, 4, 2, 10 };

            Console.WriteLine("Sorting ascending...");
            BubbleSort(array, new Compare(AscendCompare));

            for (int i = 0; i<array.Length; i++)
                Console.Write($"{array[i]} ");

            int[] array2 = { 7, 2, 8, 10, 11 };
            Console.WriteLine("\nSorting descending...");
            BubbleSort(array2, new Compare(DescendCompare));            

            for (int i = 0; i < array2.Length; i++)
                Console.Write($"{array2[i]} ");

            Console.WriteLine();
        }
    }

    답 :
    internal class Program
    {
        static void Bubble(int[] data, Func<int, int, int> condition)
        {
            int temp;
            for (int i = 0; i < data.Length - 1; i++)
            {
                for (int j = 0; j < data.Length - (i + 1); j++)
                {
                    if (condition(data[j], data[j + 1]) > 0)
                    {
                        temp = data[j + 1];
                        data[j + 1] = data[j];
                        data[j] = temp;
                    }
                }
            }
        }

        static void Main(string[] args)
        {
            Func<int, int, int> Ascend = delegate (int x, int y)
            {
                if (x > y) return 1;
                else if (x == y) return 0;
                else return -1;
            };
            Func<int, int, int> Descend = delegate (int x, int y)
            {
                if (x < y) return 1;
                else if (x == y) return 0;
                else return -1;
            };

            int[] array = [3, 7, 4, 2, 10];

            Console.WriteLine("Sorting ascending...");
            Bubble(array, Ascend);
            for (int i = 0; i < array.Length; i++)
                Console.Write($"{array[i]} ");

            int[] array2 = { 7, 2, 8, 10, 11 };
            Console.WriteLine("\nSorting descending...");
            Bubble(array2, Descend);
            for (int i = 0; i < array2.Length; i++)
                Console.Write($"{array2[i]} ");
            Console.WriteLine();
        }
    }


문제 4.
    아래의 코드도 delegate 대신에 Func를 이용해서 출력 하세요.
    
    코드 :
    delegate int Compare(int a, int b);

    class MainApp
    {
        static void BubbleSort(int[] DataSet, Compare Comparer)
        {
            int i = 0;
            int j = 0;
            int temp = 0;

            for (i = 0; i < DataSet.Length - 1; i++)
            {
                for (j = 0; j < DataSet.Length - (i + 1); j++)
                {
                    if (Comparer(DataSet[j], DataSet[j + 1]) > 0)
                    {
                        temp = DataSet[j + 1];
                        DataSet[j + 1] = DataSet[j];
                        DataSet[j] = temp;
                    }
                }
            }
        }

        static void Main(string[] args)
        {
            int[] array = { 3, 7, 4, 2, 10 };

            Console.WriteLine("Sorting ascending...");
            BubbleSort(array, delegate(int a, int b)
                              {
                                if (a > b)
                                    return 1;
                                else if (a == b)
                                    return 0;
                                else
                                    return -1;
                              });

            for (int i = 0; i < array.Length; i++)
                Console.Write($"{array[i]} ");

            int[] array2 = { 7, 2, 8, 10, 11 };
            Console.WriteLine("\nSorting descending...");
            BubbleSort(array2, delegate(int a, int b)
                               {
                                 if (a < b)
                                     return 1;
                                 else if (a == b)
                                     return 0;
                                 else
                                     return -1;
                               });

            for (int i = 0; i < array2.Length; i++)
                Console.Write($"{array2[i]} ");

            Console.WriteLine();
        }
    }

    답 : 
    internal class Program
    {
        static void Bubble(int[] data, Func<int, int, int> condition)
        {
            int temp;
            for (int i = 0; i < data.Length - 1; i++)
            {
                for (int j = 0; j < data.Length - (i + 1); j++)
                {
                    if (condition(data[j], data[j + 1]) > 0)
                    {
                        temp = data[j + 1];
                        data[j + 1] = data[j];
                        data[j] = temp;
                    }
                }
            }
        }

        static void Main(string[] args)
        {
            Func<int, int, int> Ascend = delegate (int x, int y)
            {
                if (x > y) return 1;
                else if (x == y) return 0;
                else return -1;
            };
            Func<int, int, int> Descend = delegate (int x, int y)
            {
                if (x < y) return 1;
                else if (x == y) return 0;
                else return -1;
            };

            int[] array = [3, 7, 4, 2, 10];

            Console.WriteLine("Sorting ascending...");
            Bubble(array, Ascend);
            for (int i = 0; i < array.Length; i++)
                Console.Write($"{array[i]} ");

            int[] array2 = { 7, 2, 8, 10, 11 };
            Console.WriteLine("\nSorting descending...");
            Bubble(array2, Descend);
            for (int i = 0; i < array2.Length; i++)
                Console.Write($"{array2[i]} ");
            Console.WriteLine();
        }
    }


