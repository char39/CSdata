유니티
   AICar 경로를 따라서 자동으로 달리는 자동차 게임 만들기
   1. AICar가 다닐 수 있는 경로
   2. PlayerCar, AICar을 만들었음.

이번 주 금요일 9시 ~ 4시까지 평가가 있음.
   유니티 엔진을 평가하는 시험


C#

문제. 60kg 이상을 내림차순으로 정렬하여 출력하시오.
   Name : Cinnamon     Weight : 55kg
   Name : Vanilla      Weight : 60kg
   Name : Chocolate    Weight : 70kg
   Name : Strawberry   Weight : 65kg
   Name : Banana       Weight : 50kg
   Name : Apple        Weight : 40kg
   Name : Orange       Weight : 45kg
   Name : Grape        Weight : 55kg

   답.
      class Profile
      {
         public string? Name { get; set; }
         public int Weight { get; set; }
      }

      internal class Program
      {
         static void Main()
         {
               Profile[] profiles =
               {
                  new Profile() {Name = "Cinnamon", Weight = 55},
                  new Profile() {Name = "Vanilla", Weight = 60},
                  new Profile() {Name = "Chocolate", Weight = 70},
                  new Profile() {Name = "Strawberry", Weight = 65},
                  new Profile() {Name = "Banana", Weight = 50},
                  new Profile() {Name = "Apple", Weight = 40},
                  new Profile() {Name = "Orange", Weight = 45},
                  new Profile() {Name = "Grape", Weight = 55},
               };

               var select = from profile in profiles
                              where profile.Weight >= 60
                              orderby profile.Weight descending
                              select profile;

               Console.WriteLine();
               foreach (var prof in select)
               {
                  Console.Write($"Name : {prof.Name}".PadRight(20));
                  Console.WriteLine($"Weight : {prof.Weight}kg");
               }

               
         }
      }

문제. 60점 이상만  이름순으로 정렬  이름만 추출 하여 출력 하세요
    public class Student
    {
        public string? name { get; set; }
        public int score { get; set; }
    }

    internal class Program
    {
        static void Main()
        {
            List<Student> students = new List<Student>
            {
                new Student { name = "zzz", score = 88},
                new Student { name = "kim", score = 50},
                new Student { name = "han", score = 76 },
                new Student { name = "park", score = 45 },
                new Student { name = "peter", score = 84 },
                new Student { name = "lee", score = 98 }
            };
        }
    }

    답 :
         var sort =  from student in students
                     where student.score >= 60
                     orderby student.name ascending
                     select student.name;
            
         foreach (var name in sort)
            Console.WriteLine($"Name : {name}");
.
.