1. 다음과 같이 사용자로부터 사각형의 너비와 높이를 입력받아
넓이를 계산하는 프로그램을 작성하세요. 
	ex)	사각형의 너비를 입력하세요.
		30
		사각형의 높이를 입력하세요.
		40
		사각형의 넓이는 : 1200
// 1.
Console.WriteLine("사각형의 너비를 입력하세요.");
string width = Console.ReadLine();
Console.WriteLine("사각형의 높이를 입력하세요.");
string height = Console.ReadLine();

int width_int = int.Parse(width);
int height_int = int.Parse(height);
int area_int = width_int * height_int;
Console.WriteLine($"사각형의 넓이는 : {area_int}");



2. 다음 코드에서 잘못된 부분을 찾고, 그 이유를 설명하세요.
		int a = 7.3;
		float b = 3.14;
		double c = a * b;
		char d = "abc";
		string e = '한';
잘못된 부분은
	int a 는 정수형이라 7.3은 불가
	float b = 3.14; 에서 f가 빠짐
	char d 에 문자열 ""는 들어갈 수 없음
	string e 은 문자 하나를 암시적으로 문자열로 바꿀수 없음



3. 값 형식과 참조 형식의 차이는 무엇인가요?
	값 형식은 스택에 데이터가 직접 저장되어 중괄호를 나가면 메모리에서 지워지고
	참조 형식은 힙에 값이 저장되어 스택에 값 주소가 저장됩니다.



4. 박싱과 언박싱을 설명하세요.
	박싱은 값 형식을 참조 형식으로 바꾸어 스택에 있는 데이터를 힙에 저장하고
	언박싱은 참조 형식을 값 형식으로 바꾸어 힙에 있는 데이터를 스택에 저장합니다.



5. 다음 코드를 컴파일한 후의 a와 b는 각각 어떤 데이터 형식이겠습니까?
	ex)	var a = 2020;
		var b = "double";

	var a 는 정수형 데이터, var b 는 문자열 (string) 데이터가 됩니다.



1. i++와 ++i의 차이점은 무엇인가요?
	i++은 수식을 먼저 표현하고, ++이 나중에 계산됩니다.
	++i는 먼저 ++가 i에 계산됩니다.



2. 다음 보기 중에서 그 결과가 다른 것을 찾으세요
(변수 i를 초기화해서 각 보기를 실행해보면 그 결과가 나옵니다.)
		[1] i = i + 1;
		[2] i++;
		[3] ++i;
		[4] i += 1;

	[2]번입니다
	바로 위 1. 에서 작성한 내용과 같이 i++은 i를 먼저 표현하고
	++가 나중에 계산되어 다음 행 첫번째에 계산되기때문.



3. 다음 코드에서 a와 b는 각각 얼마일까요?
	ex)	int a = 8 >> 1;
		int b = a >> 2;

	a는 4입니다.	2^1 만큼 나누기
	b는 1입니다.	2^2 만큼 나누기



4. 다음 코드에서 a는 얼마일까요?
	ex)	int a = 0xF0 | 0x0F;

	int a = 0xFF가 나오므로 255입니다.



5. 다음 코드에서 b는 어떤 값을 가질까요?
	ex)	int a = 10;
		string b = (a == 0) ? "가나다" : "ABC";

	a는 0과 같지 않으므로 "ABC"가 출력됩니다.



1. 다음과 같은 결과를 출력하는 프로그램을 for문을 이용하여 작성하세요.
규칙은 첫 번째 줄에 별 1개, 두 번째 줄에 별 2개, ... 식으로 5개의 별이 찍힐 때까지 반복합니다.

for (int i = 0; i < 5; i++)
{
    for (int j = 0; j <= i; j++)
    {
        Console.Write("＊");
    }
    Console.WriteLine();
}


2. 반대로 작성하세요.

for (int i = 5; i > 0; i--)
{
    for (int j = 0; j < i; j++)
    {
        Console.Write("＊");
    }
    Console.WriteLine();
}


















